{"version":3,"sources":["views/Home.jsx","client.js","views/Writings.jsx","scripts/readTime.js","assets/02-Tokyo-Reggy.mp3","views/Post.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Home","className","href","sanityClient","projectId","dataset","apiVersion","token","process","useCdn","Writings","useState","posts","setPosts","useEffect","fetch","then","data","catch","console","error","to","map","slug","_id","title","current","readTime","wordCount","paragraphs","document","querySelectorAll","images","textContent","split","length","Math","ceil","builder","imageUrlBuilder","Post","source","content","setContent","useParams","Date","publishedAt","toDateString","controls","src","tokyoReggy","type","mainImage","image","size","url","alt","blocks","body","App","basename","component","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37ca4f53.chunk.js","sourcesContent":["import React from 'react';\n// import { Link } from 'react-router-dom';\n\nfunction Home() {\n\treturn(\n\t\t<div className='view'>\n\t\t\t<h1 className='title'>Cullen Sharp</h1>\n\t\t\t<p className='intro'>\n\t\t\t\t<mark className='highlight'>Fullstack Web Developer</mark> with hands-on experience in the design and development of web applications from concept to release. Motivated self-starter focused on working at the intersection of art, design, and technology to create <mark>immersive</mark> and <mark>intuitive</mark> user experiences.\n\t\t\t</p>\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/CullenSharp\">github,</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/cullensharp/\">linkedin,</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://www.are.na/cullen-sharp\">are.na,</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</ div>\n\t);\n}\n\nexport default Home;\n","/* eslint-disable no-undef */\nimport sanityClient from '@sanity/client';\n\nexport default sanityClient({\n\tprojectId: 'cq5ohcjc',\n\tdataset: 'production',\n\tapiVersion: '2021-10-20',\n\ttoken: process.env.REACT_APP_SANITY_TOKEN,\n\tuseCdn: true\n});\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport sanityClient from '../client';\n\nfunction Writings() {\n\tconst [posts, setPosts] = useState(null);\n\n\tuseEffect(() => {\n\t\tsanityClient\n\t\t\t.fetch(\n\t\t\t\t`*[_type == \"post\"]{\n          title,\n          slug\n        }`\n\t\t\t)\n\t\t\t.then((data) => setPosts(data))\n\t\t\t.catch(console.error);\n\t});\n\n\treturn(\n\t\t<section>\n\t\t\t<Link  to='/'>\n\t\t\t\t<h3>Home</h3>\n\t\t\t</Link>\n\t\t\t<h1>Nothing to see here</h1>\n\t\t\t{ posts?.map(({slug, _id, title}) => (\n\t\t\t\t<Link to={'/Writings/'+slug.current} key={_id}>\n\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t</Link>\n\t\t\t))}\n\t\t</section>\n\t);\n}\n\nexport default Writings;\n","/**\n * A script that generates a post's estimated read time based on images and words.\n * @returns {string}\n */\nfunction readTime(wordCount = 0) {\n\tconst paragraphs = document.querySelectorAll('p');\n\tconst images = document.querySelectorAll('img');\n\t\n\tfor(let { textContent } of paragraphs) {\n\t\twordCount += textContent.split(' ').length;\n\t}\n\n\tlet readTime = Math.ceil((wordCount / 275) + (images.length * .2));\n\treturn `${readTime} min read`;\n}\n\nexport default readTime;","export default __webpack_public_path__ + \"static/media/02-Tokyo-Reggy.93feb862.mp3\";","/* eslint-disable no-mixed-spaces-and-tabs */\n\nimport React, { useState, useEffect } from 'react';\nimport sanityClient from '../client';\nimport { useParams, Link } from 'react-router-dom';\nimport imageUrlBuilder from '@sanity/image-url';\n\n//Components\nimport BlockContent from '@sanity/block-content-to-react';\n\n//Utilities\nimport readTime from '../scripts/readTime';\n\n//Assets\nimport tokyoReggy from '../assets/02-Tokyo-Reggy.mp3';\n\nconst builder = imageUrlBuilder(sanityClient);\n\nfunction urlFor(source) {\n\treturn builder.image(source);\n}\n\nfunction Post() {\n\tconst [content, setContent] = useState(null);\n\tconst { slug } = useParams();\n\n\tuseEffect(() => {\n\t\tsanityClient\n\t\t\t.fetch(\n\t\t\t\t`*[_type == \"post\" && slug.current == \"${slug}\"]{\n          _id,\n          title,\n          mainImage,\n          body,\n          categories[0...10]->{title},\n          publishedAt\n        }`\n\t\t\t)\n\t\t\t.then((data) => setContent({...data[0]}))\n\t\t\t.catch(console.error);\n\t}, []);\n\n\treturn(\n\t\t<section>\n\t\t\t<Link to='/'>\n\t\t\t\t<h3>Home</h3>\n\t\t\t</Link>\n\t\t\t{ content &&\n        <>\n        \t<h1 className='headline'>{content.title}</h1>\n        \t<h4>{`${new Date(content.publishedAt).toDateString()} ‚ÅÇ ${readTime()}`}</h4>\n        \t<audio controls>\n        \t\t<source src={tokyoReggy} type=\"audio/mp3\" />\n        \t</audio>\n        \t<article>\n        \t\t<figure>\n        \t\t\t<img src={urlFor(content.mainImage).size(400,400).url()} alt={content.title} />\n        \t\t\t<figcaption>[1] a shuttle</figcaption>\n        \t\t</figure>\n        \t\t<BlockContent blocks={content.body} />\n        \t</article>\n        </>\n\t\t\t}\n\t\t</section>\n\t);\n}\n\nexport default Post;","/* eslint-disable no-undef */\nimport React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch\n} from 'react-router-dom';\n\n// Views\nimport Home from './views/Home';\nimport Writings from './views/Writings';\nimport Post from './views/Post';\n\nfunction App() {\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<Switch>\n\t\t\t\t<Route component={Home} exact path='/' />\n\t\t\t\t<Route component={Writings} exact path='/Writings' />\n\t\t\t\t<Route component={Post} path='/Writings/:slug' />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}